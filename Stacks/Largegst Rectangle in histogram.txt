class Solution {
    public int largestRectangleArea(int[] arr) {
        
        int n=arr.length;
        if(n==0) return 0;
        int maxArea=0;
        Stack<Integer> st=new Stack<>();
        //int nsr=0,nsl=0;
        for(int i=0;i<=n;i++)
        {
            int val=(i==arr.length?0:arr[i]);
            while(!st.isEmpty()&& arr[st.peek()]>val)
            {
                int tsb=st.pop();
                int nsr=i;
                int nsl=st.isEmpty()?-1:st.peek();
                
                //nsr-nsl+1 if nsl and nsr are inclusive but we want exclusive
                int width=(nsr-nsl-1);
                maxArea=Math.max(maxArea,width*arr[tsb]);
            }    
            
            st.push(i);
        }
        return maxArea;
    }
}