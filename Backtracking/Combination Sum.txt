class Solution {
    
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
            List<List<Integer>> res=new ArrayList<>();
            backtrack(res,0,candidates,new ArrayList<>(),target);
      
        return res;
    }
    public void backtrack(List<List<Integer>> res,int idx,int[] nums,List<Integer> cur,int t)
    {
        if(t<0) return;
        
        else if(t==0)
        {
            res.add(new ArrayList(cur));
            return;
        }
        
        for(int i=idx;i<nums.length;i++)
        {
            cur.add(nums[i]);
            backtrack(res,i,nums,cur,t-nums[i]);
            cur.remove(cur.size()-1);
        }
    }
}