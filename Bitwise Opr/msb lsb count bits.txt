static int msb(int n) 
    { 
        if (n == 0) 
            return 0; 
  
        int msb = 0; 
        n = n / 2; 
  
        while (n != 0) { 
            n = n / 2; 
            msb++; 
        } 
  
        return (1 << msb); 
//if pos has to be returned then return msb+1
    }
//lsb
int PositionRightmostSetbit(int n)
{
  int p=1;
   
  // Iterate till number>0
  while(n > 0)
  {
     
    // Checking if last bit is set
    if(n&1){
      return p;
    }
     
    // Increment position and right shift number
    p++;
    n=n>>1;
  }
   
  // set bit not found.
  return -1;
}

//No.of set bits:
int PositionRightmostSetbit(int n)
{
  int p=1;
   
  // Iterate till number>0
  while(n > 0)
  {
     
    // Checking if last bit is set
    if(n&1){
      return p;
    }
     
    // Increment position and right shift number
    p++;
    n=n>>1;
  }
   
  // set bit not found.
  return -1;
} 