/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<String> res=new ArrayList<>();
    //String str="";
    public void preorder(TreeNode root,String str)
    {
        if(root==null)
        {

            return;
        }
        if(root.left==null && root.right==null) 
        {
            str+=root.val+"";
            res.add(str);
           // str="";
            return;
        }
        else str+=root.val+"->";
         preorder(root.left,str);
         preorder(root.right,str);
        
    }
    public List<String> binaryTreePaths(TreeNode root) {
        
        preorder(root,"");
        return res;
    }
}