/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    int c=0;
    Map<Integer,Integer> hm=new HashMap<>();
    public void dfs(TreeNode root)
    {
        if(root==null) return;
        hm.put(root.val,hm.getOrDefault(root.val,0)+1);
        if(root.left==null && root.right==null) 
        {
            int o=0,e=0;
            for(Map.Entry<Integer,Integer> m :hm.entrySet())
            {
                if(m.getValue()%2==0) e++;
                
                else o++;
            }
            if(o<=1 ) c++;
            
        }
        
        
        
        dfs(root.left);
        dfs(root.right);
        hm.put(root.val,hm.get(root.val)-1);
        
    }
    public int pseudoPalindromicPaths (TreeNode root) {

        
        dfs(root);
        return c;
    }
}